// DO NOT MODIFY BY HAND! This file has been generated by mirage. If there is an issue with it please raise an issue at: https://github.com/Apadmi-Engineering/mirage/issues

// ignore_for_file: invalid_use_of_internal_member, unused_element

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'input.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'dart:async' as _i3;
import 'package:mockito/src/dummies.dart' as _i4;

// Mirage generated mock of class [TestNotifier].
class MockTestNotifier extends _i1._$TestNotifier
    with _i2.Mock
    implements _i1.TestNotifier {
  MockTestNotifier(this.seedBuilder);

  _i3.FutureOr<String> Function() seedBuilder;

  @override
  _i3.FutureOr<String> build() async {
    // keepAlive() used so mock instance with stubbed/real calls isn't disposed.
    ref.keepAlive();
    return noSuchMethod(
      Invocation.method(#build, []),
      returnValueForMissingStub: seedBuilder(),
    );
  }

  @override
  String someMethod() {
    return noSuchMethod(
      Invocation.method(#someMethod, []),
      returnValueForMissingStub: _i4.dummyValue<String>(
        this,
        Invocation.method(#someMethod, []),
      ),
      returnValue: _i4.dummyValue<String>(
        this,
        Invocation.method(#someMethod, []),
      ),
    );
  }

  @override
  _i3.Future<int> someAsyncMethod() async {
    return noSuchMethod(
      Invocation.method(#someAsyncMethod, []),
      returnValueForMissingStub: _i4.dummyValue<int>(
        this,
        Invocation.method(#someAsyncMethod, []),
      ),
      returnValue: _i4.dummyValue<int>(
        this,
        Invocation.method(#someAsyncMethod, []),
      ),
    );
  }

  @override
  void sideEffect() {
    return noSuchMethod(Invocation.method(#sideEffect, []));
  }

  @override
  _i3.Future<void> asyncSideEffect() async {
    return noSuchMethod(Invocation.method(#asyncSideEffect, []));
  }
}
